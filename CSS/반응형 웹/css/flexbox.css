body, html {
    height: 100%;
}

.container {
    background: beige;
    /*100%가 안먹는이유 : 부모 태그(body,html)의 높이가 지정되지 않았기 때문 */
    height: 100%;

    display: flex;

    /*row는 기본값으로 왼쪽에서 오른쪽방향*/
    flex-direction: row;

    /*column은 위에서 아래로*/
    /* flex-direction: column; */

    /*item들이 다음 줄로 넘어가지 않음*/
    /* flex-wrap: nowrap; */
    
    /*item들이 꽉차면 다음 줄로 넘어감*/
    flex-wrap: wrap;

    /*justify-content - item들의 배치 방법 지정(주축 방향)*/
    /*flex-start가 기본값으로(주축에 따라 왼쪽에서 오른쪽, 위에서 아래)*/
    justify-content: flex-start;
    /*flex-end는 오른쪽에서 왼쪽, 아래에서 위*/
    justify-content: flex-end;
    /*center는 주축의 중간으로*/
    justify-content: center;

    /*박스를 둘러싸게 spacing을 넣어주는것*/
    justify-content: space-around;
    /*박스에 모두 똑같은 간격의 spacing을 넣어주는것*/
    justify-content: space-evenly;
    /*첫번째와 마지막은 화면에 맞게 배치하고 나머지 간격을 나눈 spacing을 넣어주는것*/
    justify-content: space-between;

    /* align-items - item들의 배치 방법 지정(주축의 반대 방향)*/
    /* align-items: center; */
    /*baseline - 높이가 다른 텍스트의 위치를 맞춰준다 - item1과 나머지*/
    align-items: baseline;

}

.item {
    width: 40px;
    height: 40px;
}

.item1 {
    background: red;
    padding: 30px;;
}
.item2 {
    background: orange;
    /*container 사이즈가 변경되었을 때 item에 얼마 만큼의 변동성을 줄 지*/
    /*flex-grow는 container를 꽉채워주는 속성(기본값은 0)*/
    flex-grow: 2;
    /*container가 작아졌을 떄 같이 작아지는 속성(기본값은 0)*/
    flex-shrink: 2;

    /*%로 해당 item이 너비의 얼마만큼을 차지할지 적용 기본값은 auto로 flex-grow와 flex-shrink값 적용*/
    flex-basis: auto;

    /*아이템 별로 정렬 가능*/
    align-self: flex-start;
}
.item3 {
    background: yellow;
    flex-grow: 1;
}
.item4 {
    background: green;
}
.item5 {
    background: blue;
}
.item6 {
    background: navy;
}
.item7 {
    background: purple;
}
.item8 {
    background: pink;
}
.item9 {
    background: black;
}
.item10 {
    background: grey;
}